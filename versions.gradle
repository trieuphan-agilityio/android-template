ext.deps = [:]

def versions = [:]
    versions.android_gradle_plugin = '3.5.3'
    versions.google_service = '4.3.3'
    versions.kotlin = '1.3.50'

    versions.easy_launcher = '1.3.1'
    versions.app_center_plugin = '1.1.13'
    versions.app_center = '2.3.0'
    versions.fabric = '1.31.2'

    // Network
    versions.retrofit = '2.6.2'
    versions.okhttp3 = '4.4.0'

    // Arch
    versions.lifecycle = '2.2.0'
    versions.room = '2.2.4'
    versions.live_data_ktx = "2.2.0"

    // AndroidX
    versions.test_ext_junit = '1.1.1'
    versions.test_core = "1.1.0"
    versions.test_runner = "1.2.0"
    versions.constraint_layout = "1.1.3"
    versions.biometric = "1.0.1"

    // DI
    versions.koin = "2.0.1"
    versions.koin_android_architecture = "0.8.2"

    // Unit test
    versions.junit = "4.12"
    versions.mockito = "3.0.0"

    //Espresso
    versions.espresso = "3.2.0"

    // Logging
    versions.timber = "4.7.1"

    // Tracking
    versions.mparticle_core = "5.10.2"
    versions.installreferrer = "1.1.1"

    // Google
    versions.material = "1.0.0"
    versions.firebase = "17.2.1"

    //coil
    versions.coil = "0.7.0"

    //coroutines
    versions.coroutines = "1.3.1"

    //restring
    versions.restring = "1.0.0"

    //dexter
    versions.dexter = "6.0.0"

    //section recyclerview
    versions.section_recycler = "1.2.0"

    //alert
    versions.alert = "4.0.0"

    //shimmer
    versions.shimmer = "0.1.0@aar"

    //commons
    versions.commons = "3.7"

    //support rotate photo
    versions.exifinterface = "1.1.0"

    //scanner card
    versions.scanner_card = "5.5.0"

def deps = [:]
    deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
    deps.google_service = "com.google.gms:google-services:$versions.google_service"
    deps.kotlin_gradle_plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
    deps.easy_launcher = "com.akaita.android:easylauncher:$versions.easy_launcher"
    deps.fabric = "io.fabric.tools:gradle:$versions.fabric"
    deps.commons = "org.apache.commons:commons-lang3:$versions.commons"
    deps.app_center_plugin = "gradle.plugin.com.betomorrow.gradle:appcenter-plugin:$versions.app_center_plugin"
ext.deps = deps

def build_versions = [:]
    build_versions.min_sdk = 21
    build_versions.target_sdk = 29
    build_versions.compile_sdk = 29

    build_versions.build_tools = "29.0.2"
    build_versions.version_code = genVersionCode()
    build_versions.version_name = "1.0.0"
ext.build_versions = build_versions

static def buildTime() {
    def date = new Date()
    def formattedDate = date.format('yyMMddHHmm')
    return formattedDate
}

static def genVersionCode() {
    return Integer.parseInt(buildTime())
}

def kotlin = [:]
    kotlin.kotlin_stdlib_jdk7 = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"

    def coroutines = [:]
        coroutines.core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
        coroutines.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
    kotlin.coroutines = coroutines
deps.kotlin = kotlin


def appcenter = [:]
    appcenter.analytics = "com.microsoft.appcenter:appcenter-analytics:$versions.app_center"
    appcenter.crashes = "com.microsoft.appcenter:appcenter-crashes:$versions.app_center"
deps.appcenter = appcenter


def arch = [:]
    def lifecycle = [:]
        lifecycle.runtime = "android.arch.lifecycle:runtime:$versions.lifecycle"
        lifecycle.viewmodel_kotlin = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
        lifecycle.common_java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
        lifecycle.extensions= "android.arch.lifecycle:extensions:$versions.lifecycle"
        lifecycle.live_data_ktx = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.live_data_ktx"
    arch.lifecycle = lifecycle

    def persistence = [:]
        def room = [:]
            room.runtime = "android.arch.persistence.room:runtime:$versions.room"
            room.compiler = "android.arch.persistence.room:compiler:$versions.room"
            room.ktx = "androidx.room:room-ktx:$versions.room"
            room.rxjava2 = "android.arch.persistence.room:rxjava2:$versions.room"
            room.test = "androidx.room:room-testing:$versions.room"
        persistence.room = room
    arch.persistence = persistence

    def core = [:]
        core.test = "androidx.test:core:$versions.test_core"
    arch.core = core
deps.arch = arch


def androidx = [:]
    def test = [:]
        test.ext_junit = "androidx.test.ext:junit:$versions.test_ext_junit"
        test.runner = "androidx.test:runner:$versions.test_runner"

        def espresso = [:]
            espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
            espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
        test.espresso = espresso

    androidx.test = test
    androidx.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
    androidx.biometric = "androidx.biometric:biometric:$versions.biometric"
    androidx.exifinterface = "androidx.exifinterface:exifinterface:$versions.exifinterface"
deps.androidx = androidx


def retrofit2 = [:]
    retrofit2.retrofit = "com.squareup.retrofit2:retrofit:$versions.retrofit"
    retrofit2.converter_gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    retrofit2.rx_java2 = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
deps.retrofit2 = retrofit2


def okhttp3 = [:]
    okhttp3.okhttp = "com.squareup.okhttp3:okhttp:$versions.okhttp3"
    okhttp3.logging_interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp3"
deps.okhttp3 = okhttp3


def images = [:]
    images.coil = "io.coil-kt:coil:$versions.coil"
deps.images = images

def di = [:]
    def koin = [:]
        koin.android = "org.koin:koin-android:$versions.koin"
        koin.android_scope = "org.koin:koin-android-scope:$versions.koin"
        koin.androidx_viewmodel = "org.koin:koin-androidx-viewmodel:$versions.koin"
        koin.android_architecture = "org.koin:koin-android-architecture:$versions.koin_android_architecture"
        koin.test = "org.koin:koin-test:$versions.koin"
    di.koin = koin
deps.di = di


def google = [:]
    google.material = "com.google.android.material:material:$versions.material"

    def firebase = [:]
        firebase.core = "com.google.firebase:firebase-core:$versions.firebase"
        firebase.analytics = "com.google.firebase:firebase-analytics:$versions.firebase"
    google.firebase = firebase
deps.google = google


def unit_test = [:]
    unit_test.junit = "junit:junit:$versions.junit"
deps.unittest = unit_test


def mockito = [:]
    mockito.core = "org.mockito:mockito-core:$versions.mockito"
deps.mockito = mockito


def android_test = [:]
deps.android_test = android_test


def logging = [:]
    logging.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.logging = logging


def tracking = [:]
    tracking.mparticle = "com.mparticle:android-core:$versions.mparticle_core"
    tracking.installreferrer = "com.android.installreferrer:installreferrer:$versions.installreferrer"
deps.tracking = tracking


def language = [:]
    language.restring = "com.ice.restring:restring:$versions.restring"
deps.language = language


def permission = [:]
    permission.dexter = "com.karumi:dexter:$versions.dexter"
deps.permission = permission


def view = [:]
    def recyclerview = [:]
        recyclerview.expendable = "io.github.luizgrp.sectionedrecyclerviewadapter:sectionedrecyclerviewadapter:$versions.section_recycler"
        view.recyclerview = recyclerview
    view.alert = "com.tapadoo.android:alerter:$versions.alert"
    view.shimmer = "com.facebook.shimmer:shimmer:$versions.shimmer"
    view.scanner_card = "io.card:android-sdk:$versions.scanner_card"
deps.view = view


def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url 'https://jitpack.io' }
    handler.maven { url 'https://maven.google.com' }
    handler.maven { url "https://plugins.gradle.org/m2/" }
    handler.maven { url 'https://maven.fabric.io/public' }
}
ext.addRepos = this.&addRepos